State 40 conflicts: 1 shift/reduce
State 46 conflicts: 2 shift/reduce
State 48 conflicts: 1 shift/reduce
State 58 conflicts: 2 shift/reduce
State 59 conflicts: 2 shift/reduce


Grammar

    0 $accept: Series $end

    1 Series: Stmt
    2       | Series Stmt

    3 Stmt: Decl ';'
    4     | Assign ';'
    5     | Print ';'
    6     | BEG Series END

    7 Decl: Type Init
    8     | Decl ',' Init

    9 Init: Identifier
   10     | Identifier '=' E

   11 Type: T_Int
   12     | T_Float

   13 Assign: Identifier '=' E
   14       | Assign ',' Identifier '=' E

   15 Print: PRINT Identifier

   16 E: E '+' E
   17  | E '-' E
   18  | E '*' E
   19  | E '/' E
   20  | '-' E
   21  | V_Int
   22  | V_Float
   23  | Identifier
   24  | '(' E ')'

   25 Condition: IF BoolExp THEN

   26 Stmt: Condition Stmt

   27 CondStElse: Condition Stmt ELSE

   28 Stmt: CondStElse Stmt

   29 Wl: WHILE

   30 WED: Wl BoolExp DO

   31 Stmt: WED Stmt

   32 BoolExp: E
   33        | E Rop E
   34        | '(' BoolExp ')'
   35        | OPS BoolExp
   36        | BEAND BoolExp
   37        | BEOR BoolExp

   38 BEAND: BoolExp AND

   39 BEOR: BoolExp OR


Terminals, with rules where they appear

$end (0) 0
'(' (40) 24 34
')' (41) 24 34
'*' (42) 18
'+' (43) 16
',' (44) 8 14
'-' (45) 17 20
'/' (47) 19
';' (59) 3 4 5
'=' (61) 10 13 14
error (256)
T_Int (258) 11
T_Float (259) 12
V_Int (260) 21
V_Float (261) 22
Identifier (262) 9 10 13 14 15 23
PRINT (263) 15
IF (264) 25
THEN (265) 25
ELSE (266) 27
WHILE (267) 29
DO (268) 30
BEG (269) 6
END (270) 6
Rop (271) 33
AND (272) 38
OR (273) 39
OPS (274) 35
UNMINUS (275)


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
Series (31)
    on left: 1 2, on right: 0 2 6
Stmt (32)
    on left: 3 4 5 6 26 28 31, on right: 1 2 26 27 28 31
Decl (33)
    on left: 7 8, on right: 3 8
Init (34)
    on left: 9 10, on right: 7 8
Type (35)
    on left: 11 12, on right: 7
Assign (36)
    on left: 13 14, on right: 4 14
Print (37)
    on left: 15, on right: 5
E (38)
    on left: 16 17 18 19 20 21 22 23 24, on right: 10 13 14 16 17 18
    19 20 24 32 33
Condition (39)
    on left: 25, on right: 26 27
CondStElse (40)
    on left: 27, on right: 28
Wl (41)
    on left: 29, on right: 30
WED (42)
    on left: 30, on right: 31
BoolExp (43)
    on left: 32 33 34 35 36 37, on right: 25 30 34 35 36 37 38 39
BEAND (44)
    on left: 38, on right: 36
BEOR (45)
    on left: 39, on right: 37


State 0

    0 $accept: . Series $end

    T_Int       shift, and go to state 1
    T_Float     shift, and go to state 2
    Identifier  shift, and go to state 3
    PRINT       shift, and go to state 4
    IF          shift, and go to state 5
    WHILE       shift, and go to state 6
    BEG         shift, and go to state 7

    Series      go to state 8
    Stmt        go to state 9
    Decl        go to state 10
    Type        go to state 11
    Assign      go to state 12
    Print       go to state 13
    Condition   go to state 14
    CondStElse  go to state 15
    Wl          go to state 16
    WED         go to state 17


State 1

   11 Type: T_Int .

    $default  reduce using rule 11 (Type)


State 2

   12 Type: T_Float .

    $default  reduce using rule 12 (Type)


State 3

   13 Assign: Identifier . '=' E

    '='  shift, and go to state 18


State 4

   15 Print: PRINT . Identifier

    Identifier  shift, and go to state 19


State 5

   25 Condition: IF . BoolExp THEN

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    OPS         shift, and go to state 23
    '-'         shift, and go to state 24
    '('         shift, and go to state 25

    E        go to state 26
    BoolExp  go to state 27
    BEAND    go to state 28
    BEOR     go to state 29


State 6

   29 Wl: WHILE .

    $default  reduce using rule 29 (Wl)


State 7

    6 Stmt: BEG . Series END

    T_Int       shift, and go to state 1
    T_Float     shift, and go to state 2
    Identifier  shift, and go to state 3
    PRINT       shift, and go to state 4
    IF          shift, and go to state 5
    WHILE       shift, and go to state 6
    BEG         shift, and go to state 7

    Series      go to state 30
    Stmt        go to state 9
    Decl        go to state 10
    Type        go to state 11
    Assign      go to state 12
    Print       go to state 13
    Condition   go to state 14
    CondStElse  go to state 15
    Wl          go to state 16
    WED         go to state 17


State 8

    0 $accept: Series . $end
    2 Series: Series . Stmt

    $end        shift, and go to state 31
    T_Int       shift, and go to state 1
    T_Float     shift, and go to state 2
    Identifier  shift, and go to state 3
    PRINT       shift, and go to state 4
    IF          shift, and go to state 5
    WHILE       shift, and go to state 6
    BEG         shift, and go to state 7

    Stmt        go to state 32
    Decl        go to state 10
    Type        go to state 11
    Assign      go to state 12
    Print       go to state 13
    Condition   go to state 14
    CondStElse  go to state 15
    Wl          go to state 16
    WED         go to state 17


State 9

    1 Series: Stmt .

    $default  reduce using rule 1 (Series)


State 10

    3 Stmt: Decl . ';'
    8 Decl: Decl . ',' Init

    ';'  shift, and go to state 33
    ','  shift, and go to state 34


State 11

    7 Decl: Type . Init

    Identifier  shift, and go to state 35

    Init  go to state 36


State 12

    4 Stmt: Assign . ';'
   14 Assign: Assign . ',' Identifier '=' E

    ';'  shift, and go to state 37
    ','  shift, and go to state 38


State 13

    5 Stmt: Print . ';'

    ';'  shift, and go to state 39


State 14

   26 Stmt: Condition . Stmt
   27 CondStElse: Condition . Stmt ELSE

    T_Int       shift, and go to state 1
    T_Float     shift, and go to state 2
    Identifier  shift, and go to state 3
    PRINT       shift, and go to state 4
    IF          shift, and go to state 5
    WHILE       shift, and go to state 6
    BEG         shift, and go to state 7

    Stmt        go to state 40
    Decl        go to state 10
    Type        go to state 11
    Assign      go to state 12
    Print       go to state 13
    Condition   go to state 14
    CondStElse  go to state 15
    Wl          go to state 16
    WED         go to state 17


State 15

   28 Stmt: CondStElse . Stmt

    T_Int       shift, and go to state 1
    T_Float     shift, and go to state 2
    Identifier  shift, and go to state 3
    PRINT       shift, and go to state 4
    IF          shift, and go to state 5
    WHILE       shift, and go to state 6
    BEG         shift, and go to state 7

    Stmt        go to state 41
    Decl        go to state 10
    Type        go to state 11
    Assign      go to state 12
    Print       go to state 13
    Condition   go to state 14
    CondStElse  go to state 15
    Wl          go to state 16
    WED         go to state 17


State 16

   30 WED: Wl . BoolExp DO

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    OPS         shift, and go to state 23
    '-'         shift, and go to state 24
    '('         shift, and go to state 25

    E        go to state 26
    BoolExp  go to state 42
    BEAND    go to state 28
    BEOR     go to state 29


State 17

   31 Stmt: WED . Stmt

    T_Int       shift, and go to state 1
    T_Float     shift, and go to state 2
    Identifier  shift, and go to state 3
    PRINT       shift, and go to state 4
    IF          shift, and go to state 5
    WHILE       shift, and go to state 6
    BEG         shift, and go to state 7

    Stmt        go to state 43
    Decl        go to state 10
    Type        go to state 11
    Assign      go to state 12
    Print       go to state 13
    Condition   go to state 14
    CondStElse  go to state 15
    Wl          go to state 16
    WED         go to state 17


State 18

   13 Assign: Identifier '=' . E

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    '-'         shift, and go to state 24
    '('         shift, and go to state 44

    E  go to state 45


State 19

   15 Print: PRINT Identifier .

    $default  reduce using rule 15 (Print)


State 20

   21 E: V_Int .

    $default  reduce using rule 21 (E)


State 21

   22 E: V_Float .

    $default  reduce using rule 22 (E)


State 22

   23 E: Identifier .

    $default  reduce using rule 23 (E)


State 23

   35 BoolExp: OPS . BoolExp

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    OPS         shift, and go to state 23
    '-'         shift, and go to state 24
    '('         shift, and go to state 25

    E        go to state 26
    BoolExp  go to state 46
    BEAND    go to state 28
    BEOR     go to state 29


State 24

   20 E: '-' . E

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    '-'         shift, and go to state 24
    '('         shift, and go to state 44

    E  go to state 47


State 25

   24 E: '(' . E ')'
   34 BoolExp: '(' . BoolExp ')'

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    OPS         shift, and go to state 23
    '-'         shift, and go to state 24
    '('         shift, and go to state 25

    E        go to state 48
    BoolExp  go to state 49
    BEAND    go to state 28
    BEOR     go to state 29


State 26

   16 E: E . '+' E
   17  | E . '-' E
   18  | E . '*' E
   19  | E . '/' E
   32 BoolExp: E .
   33        | E . Rop E

    Rop  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 32 (BoolExp)


State 27

   25 Condition: IF BoolExp . THEN
   38 BEAND: BoolExp . AND
   39 BEOR: BoolExp . OR

    THEN  shift, and go to state 55
    AND   shift, and go to state 56
    OR    shift, and go to state 57


State 28

   36 BoolExp: BEAND . BoolExp

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    OPS         shift, and go to state 23
    '-'         shift, and go to state 24
    '('         shift, and go to state 25

    E        go to state 26
    BoolExp  go to state 58
    BEAND    go to state 28
    BEOR     go to state 29


State 29

   37 BoolExp: BEOR . BoolExp

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    OPS         shift, and go to state 23
    '-'         shift, and go to state 24
    '('         shift, and go to state 25

    E        go to state 26
    BoolExp  go to state 59
    BEAND    go to state 28
    BEOR     go to state 29


State 30

    2 Series: Series . Stmt
    6 Stmt: BEG Series . END

    T_Int       shift, and go to state 1
    T_Float     shift, and go to state 2
    Identifier  shift, and go to state 3
    PRINT       shift, and go to state 4
    IF          shift, and go to state 5
    WHILE       shift, and go to state 6
    BEG         shift, and go to state 7
    END         shift, and go to state 60

    Stmt        go to state 32
    Decl        go to state 10
    Type        go to state 11
    Assign      go to state 12
    Print       go to state 13
    Condition   go to state 14
    CondStElse  go to state 15
    Wl          go to state 16
    WED         go to state 17


State 31

    0 $accept: Series $end .

    $default  accept


State 32

    2 Series: Series Stmt .

    $default  reduce using rule 2 (Series)


State 33

    3 Stmt: Decl ';' .

    $default  reduce using rule 3 (Stmt)


State 34

    8 Decl: Decl ',' . Init

    Identifier  shift, and go to state 35

    Init  go to state 61


State 35

    9 Init: Identifier .
   10     | Identifier . '=' E

    '='  shift, and go to state 62

    $default  reduce using rule 9 (Init)


State 36

    7 Decl: Type Init .

    $default  reduce using rule 7 (Decl)


State 37

    4 Stmt: Assign ';' .

    $default  reduce using rule 4 (Stmt)


State 38

   14 Assign: Assign ',' . Identifier '=' E

    Identifier  shift, and go to state 63


State 39

    5 Stmt: Print ';' .

    $default  reduce using rule 5 (Stmt)


State 40

   26 Stmt: Condition Stmt .
   27 CondStElse: Condition Stmt . ELSE

    ELSE  shift, and go to state 64

    ELSE      [reduce using rule 26 (Stmt)]
    $default  reduce using rule 26 (Stmt)


State 41

   28 Stmt: CondStElse Stmt .

    $default  reduce using rule 28 (Stmt)


State 42

   30 WED: Wl BoolExp . DO
   38 BEAND: BoolExp . AND
   39 BEOR: BoolExp . OR

    DO   shift, and go to state 65
    AND  shift, and go to state 56
    OR   shift, and go to state 57


State 43

   31 Stmt: WED Stmt .

    $default  reduce using rule 31 (Stmt)


State 44

   24 E: '(' . E ')'

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    '-'         shift, and go to state 24
    '('         shift, and go to state 44

    E  go to state 66


State 45

   13 Assign: Identifier '=' E .
   16 E: E . '+' E
   17  | E . '-' E
   18  | E . '*' E
   19  | E . '/' E

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 13 (Assign)


State 46

   35 BoolExp: OPS BoolExp .
   38 BEAND: BoolExp . AND
   39 BEOR: BoolExp . OR

    AND  shift, and go to state 56
    OR   shift, and go to state 57

    AND       [reduce using rule 35 (BoolExp)]
    OR        [reduce using rule 35 (BoolExp)]
    $default  reduce using rule 35 (BoolExp)


State 47

   16 E: E . '+' E
   17  | E . '-' E
   18  | E . '*' E
   19  | E . '/' E
   20  | '-' E .

    $default  reduce using rule 20 (E)


State 48

   16 E: E . '+' E
   17  | E . '-' E
   18  | E . '*' E
   19  | E . '/' E
   24  | '(' E . ')'
   32 BoolExp: E .
   33        | E . Rop E

    Rop  shift, and go to state 50
    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ')'  shift, and go to state 67

    ')'       [reduce using rule 32 (BoolExp)]
    $default  reduce using rule 32 (BoolExp)


State 49

   34 BoolExp: '(' BoolExp . ')'
   38 BEAND: BoolExp . AND
   39 BEOR: BoolExp . OR

    AND  shift, and go to state 56
    OR   shift, and go to state 57
    ')'  shift, and go to state 68


State 50

   33 BoolExp: E Rop . E

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    '-'         shift, and go to state 24
    '('         shift, and go to state 44

    E  go to state 69


State 51

   16 E: E '+' . E

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    '-'         shift, and go to state 24
    '('         shift, and go to state 44

    E  go to state 70


State 52

   17 E: E '-' . E

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    '-'         shift, and go to state 24
    '('         shift, and go to state 44

    E  go to state 71


State 53

   18 E: E '*' . E

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    '-'         shift, and go to state 24
    '('         shift, and go to state 44

    E  go to state 72


State 54

   19 E: E '/' . E

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    '-'         shift, and go to state 24
    '('         shift, and go to state 44

    E  go to state 73


State 55

   25 Condition: IF BoolExp THEN .

    $default  reduce using rule 25 (Condition)


State 56

   38 BEAND: BoolExp AND .

    $default  reduce using rule 38 (BEAND)


State 57

   39 BEOR: BoolExp OR .

    $default  reduce using rule 39 (BEOR)


State 58

   36 BoolExp: BEAND BoolExp .
   38 BEAND: BoolExp . AND
   39 BEOR: BoolExp . OR

    AND  shift, and go to state 56
    OR   shift, and go to state 57

    AND       [reduce using rule 36 (BoolExp)]
    OR        [reduce using rule 36 (BoolExp)]
    $default  reduce using rule 36 (BoolExp)


State 59

   37 BoolExp: BEOR BoolExp .
   38 BEAND: BoolExp . AND
   39 BEOR: BoolExp . OR

    AND  shift, and go to state 56
    OR   shift, and go to state 57

    AND       [reduce using rule 37 (BoolExp)]
    OR        [reduce using rule 37 (BoolExp)]
    $default  reduce using rule 37 (BoolExp)


State 60

    6 Stmt: BEG Series END .

    $default  reduce using rule 6 (Stmt)


State 61

    8 Decl: Decl ',' Init .

    $default  reduce using rule 8 (Decl)


State 62

   10 Init: Identifier '=' . E

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    '-'         shift, and go to state 24
    '('         shift, and go to state 44

    E  go to state 74


State 63

   14 Assign: Assign ',' Identifier . '=' E

    '='  shift, and go to state 75


State 64

   27 CondStElse: Condition Stmt ELSE .

    $default  reduce using rule 27 (CondStElse)


State 65

   30 WED: Wl BoolExp DO .

    $default  reduce using rule 30 (WED)


State 66

   16 E: E . '+' E
   17  | E . '-' E
   18  | E . '*' E
   19  | E . '/' E
   24  | '(' E . ')'

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54
    ')'  shift, and go to state 67


State 67

   24 E: '(' E ')' .

    $default  reduce using rule 24 (E)


State 68

   34 BoolExp: '(' BoolExp ')' .

    $default  reduce using rule 34 (BoolExp)


State 69

   16 E: E . '+' E
   17  | E . '-' E
   18  | E . '*' E
   19  | E . '/' E
   33 BoolExp: E Rop E .

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 33 (BoolExp)


State 70

   16 E: E . '+' E
   16  | E '+' E .
   17  | E . '-' E
   18  | E . '*' E
   19  | E . '/' E

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 16 (E)


State 71

   16 E: E . '+' E
   17  | E . '-' E
   17  | E '-' E .
   18  | E . '*' E
   19  | E . '/' E

    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 17 (E)


State 72

   16 E: E . '+' E
   17  | E . '-' E
   18  | E . '*' E
   18  | E '*' E .
   19  | E . '/' E

    $default  reduce using rule 18 (E)


State 73

   16 E: E . '+' E
   17  | E . '-' E
   18  | E . '*' E
   19  | E . '/' E
   19  | E '/' E .

    $default  reduce using rule 19 (E)


State 74

   10 Init: Identifier '=' E .
   16 E: E . '+' E
   17  | E . '-' E
   18  | E . '*' E
   19  | E . '/' E

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 10 (Init)


State 75

   14 Assign: Assign ',' Identifier '=' . E

    V_Int       shift, and go to state 20
    V_Float     shift, and go to state 21
    Identifier  shift, and go to state 22
    '-'         shift, and go to state 24
    '('         shift, and go to state 44

    E  go to state 76


State 76

   14 Assign: Assign ',' Identifier '=' E .
   16 E: E . '+' E
   17  | E . '-' E
   18  | E . '*' E
   19  | E . '/' E

    '+'  shift, and go to state 51
    '-'  shift, and go to state 52
    '*'  shift, and go to state 53
    '/'  shift, and go to state 54

    $default  reduce using rule 14 (Assign)
